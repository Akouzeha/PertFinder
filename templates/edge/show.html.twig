{% extends 'base.html.twig' %}

{% block title %}Hello EdgeController!{% endblock %}


{% block body %}


    <div id="chart-container">
        <a class="btn btn-avatar" href="{{path('new_task', {'diagramId': taskData[0]['diagramId']})}}"> Modifiez vous tâches ici</a></li>
    </div>

<div class="col-12">
    <div class = "task-list col-6">
        <table class = "task-table">
            <thead>
            <tr>
                <th>Task</th>
                <th>Successeur(tâches entrants)</th>
                <th>Prédécesseur(tâches sortants)</th>
            </tr>
            </thead>
            <tbody>
            {% for data in taskData %}
                <tr>
                    <td>{{ data.task.getName() }}</td>
                    <td>
                        
                            {% for edge in data.edges %}
                                {{ edge.getPredecessor().getName() }}
                                {% if not loop.last %}
                                    -
                                {% endif %}
                            {% endfor %}
                        
                    </td>
                    <td>
                        
                            {% for predecessor in data.predecessors %}
                                {{ predecessor.getTask().getName() }}
                                {% if not loop.last %}
                                    -
                                {% endif %}
                            {% endfor %}
                        </ul>
                    </td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
    </div>
    <div class="task-list col-6">
        <table class="matrix">
            <tr>
            <th>Task</th>
                {% for task in taskData %}
                    <th>
                        {{ task.task.name }}
                    </th>
                {% endfor %}
            </tr>
            {% for task in taskData %}
                <tr>
                    <td>
                        {{ task.task.name }}
                    </td>
                    {% for value in task.adjacencyMatrix %}
                        <td>
                            {{ value }}
                        </td>
                    {% endfor %}
                </tr>
            {% endfor %}
        </table>
    </div>
</div>

    <table>
        <tr>
            <th>Task</th>
            <th>level</th>
        </tr>
    {% for data in taskData %}
        <tr>
            <td>{{ data.task.getName() }}</td>
            <td>{{ data.task.getLevel() }}</td>
        </tr>
{% endfor %}
    </table>
    <div class="two-buttons">
        <a class="btn btn-avatar" href="{{path('cal_dates', {'diagramId': taskData[0]['diagramId'],'diagramId': taskData[0]['diagramId']})}}">Calculer les dates</a>
        <a href="{{path('draw_graph', {'diagramId': taskData[0].diagramId})}}" class="btn btn-avatar">Téléchargement</a>
        <a href="{{path('show_project', {'id': taskData[0].task.pertChart.project.id})}}" class="btn btn-avatar">Retour au Projet</a>
    </div>

    <script>
    anychart.onDocumentReady(function () {
	   
        const pertChartData = {{ pertChartData | json_encode | raw }};
        const pertChartDataEdges = {{ pertChartDataEdges | json_encode | raw }};
        // create a PERT chart
        var chart = anychart.pert();

        // set chart data
        chart.data(pertChartData, "asTree", pertChartDataEdges);

        // set the title of the chart
        chart.title("PERT Chart");

        // set the container id for the chart
        chart.container("chart-container");

        // initiate drawing the chart
        chart.draw();
        
        chart.verticalSpacing("30%");
        // get project duration
        var duration = chart.getStat("pertChartProjectDuration");

        // set the chart title to show the duration
        chart.title("La durée de ce projet est " + duration + " jours");
        milestones = chart.milestones();
        milestones.normal().fill("#00acc1", 0.7);
        milestones.hovered().fill("#80cbc4");
        milestones.selected().fill("#00acc1");
        milestones.normal().stroke("#90caf9", 1);
        milestones.hovered().stroke("#90caf9", 2);
        milestones.selected().stroke("#90caf9", 4);
    
        });
</script>
{% endblock %}
